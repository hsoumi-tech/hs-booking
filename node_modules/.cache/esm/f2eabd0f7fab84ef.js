let Fastify,fastifyHelmet,fastifyJwt,fastifyRateLimit,fastifySwagger,fastifyBlipp,fastifyMultipart,loadRoutes,isProduction,apiUrl,apiPort,currentProtocol;_7fa‍.w("fastify",[["default",["Fastify"],function(v){Fastify=v}]]);_7fa‍.w("fastify-helmet",[["default",["fastifyHelmet"],function(v){fastifyHelmet=v}]]);_7fa‍.w("fastify-jwt",[["default",["fastifyJwt"],function(v){fastifyJwt=v}]]);_7fa‍.w("fastify-rate-limit",[["default",["fastifyRateLimit"],function(v){fastifyRateLimit=v}]]);_7fa‍.w("fastify-swagger",[["default",["fastifySwagger"],function(v){fastifySwagger=v}]]);_7fa‍.w("fastify-blipp",[["default",["fastifyBlipp"],function(v){fastifyBlipp=v}]]);_7fa‍.w("fastify-multipart",[["default",["fastifyMultipart"],function(v){fastifyMultipart=v}]]);_7fa‍.w("./routes",[["default",["loadRoutes"],function(v){loadRoutes=v}]]);_7fa‍.w("./utils/db");_7fa‍.w("./utils/helper",[["isProduction",["isProduction"],function(v){isProduction=v}],["apiUrl",["apiUrl"],function(v){apiUrl=v}],["apiPort",["apiPort"],function(v){apiPort=v}],["currentProtocol",["currentProtocol"],function(v){currentProtocol=v}]]);

// Plugins
 // https://github.com/fastify/fastify-helmet
 // https://github.com/fastify/fastify-jwt
 // https://github.com/fastify/fastify-rate-limit
 // https://github.com/fastify/fastify-swagger
 // https://github.com/fastify/fastify-blipp
 // https://github.com/fastify/fastify-multipart

// Other
// import loadHooks from "./hooks/index";
// import loadDecorators from "./decorators";

// Local




// Variables
const fastify = Fastify({
  maxParamLength: 300,
  ignoreTrailingSlash: true,
  disableRequestLogging: true,
  logger: {
    prettyPrint: {
      translateTime: true
    }
  }
});

// Load Plugins
fastify.register(fastifyBlipp);
fastify.register(fastifyHelmet);
fastify.register(fastifyJwt, {
  secret: process.env.JWT_SECRET
});
fastify.register(fastifyRateLimit);
fastify.register(fastifySwagger, {
  routePrefix: "/api-documentation",
  exposeRoute: isProduction === false,
  swagger: {
    info: {
      title: `${process.env.PROJECT_NAME} Documentation`,
      description: "testing the fastify swagger api",
      version: process.env.PROJECT_VERSION
    },
    externalDocs: {
      url: "https://swagger.io",
      description: "Find more info here"
    },
    host: apiUrl.toString(),
    schemes: [currentProtocol],
    consumes: ["application/json"],
    produces: ["application/json"],
    securityDefinitions: {
      Authorization: {
        type: "Authorization",
        name: "Authorization",
        in: "header"
      }
    }
  }
});
fastify.register(fastifyMultipart);

// Load Routes
loadRoutes(fastify);

// Start Server
const start = async () => {
  try {
    await fastify.listen(apiPort, "0.0.0.0");
    fastify.blipp();
  } catch (err) {
    fastify.log.error(err);
    process.exit(1);
  }
};
start();

process.on("unhandledRejection", error => {
  // Will print "unhandledRejection err is not defined"
  _7fa‍.g.console.log("unhandledRejection", error.message);
});
